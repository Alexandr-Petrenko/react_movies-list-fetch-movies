{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/getMovies.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","Title","Poster","imdbID","Plot","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","url","FindMovie","addMovie","error","setError","useState","value","setValue","setMovie","htmlFor","type","id","placeholder","ClassNames","input","onChange","event","target","onClick","title","fetch","then","result","json","Error","App","some","displayedMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"2UAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MACAC,EAFuB,EAEvBA,OACAC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,KAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKJ,EACLK,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAG/B,yBAAKI,UAAU,WACZD,EACD,6BACA,uBAAGI,KAAI,qCAAgCL,IAAvC,aAWRH,EAAUS,aAAe,CACvBL,KAAM,IC1CD,IAAMM,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,wBCVlCG,EAAG,yCADM,WACN,OCOIC,EAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAChCC,mBAAS,IADuB,mBACnDC,EADmD,KAC5CC,EAD4C,OAEhCF,mBAAS,MAFuB,mBAEnDR,EAFmD,KAE5CW,EAF4C,KAI1D,OACE,oCACE,0BAAMnB,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQoB,QAAQ,eAAjC,eAIA,yBAAKpB,UAAU,WACb,2BACEqB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZvB,UAAWwB,IAAW,CACpBC,OAAO,EACP,YAAuB,sBAAVX,IAEfG,MAAOA,EACPS,SACG,SAACC,GACAT,EAASS,EAAMC,OAAOX,WAM7BH,GAEG,uBAAGd,UAAU,kBACVc,IAMT,yBAAKd,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEqB,KAAK,SACLrB,UAAU,kBACV6B,QAAS,WDjDC,IAAAC,KCkDCb,EDlDQc,MAAM,GAAD,OAAIpB,GAAJ,OAAUmB,IAC7CE,MAAK,SAAAC,GAAM,OAAIA,EAAOC,WCkDNF,MAAK,SAACC,GACDA,EAAOE,MACTpB,EAAS,sBAKXA,EAAS,IACTI,EAASc,SAbjB,iBAqBF,yBAAKjC,UAAU,WACb,4BACEqB,KAAK,SACLrB,UAAU,oBACV6B,QAAS,WACPhB,EAASL,KAJb,sBAaJA,GAEE,yBAAKR,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcQ,MCnFd4B,EAAM,WAAO,IAAD,EACIpB,mBAAS,IADb,mBAChBV,EADgB,KACRa,EADQ,OAEGH,mBAAS,IAFZ,mBAEhBF,EAFgB,KAETC,EAFS,KAavB,OACE,yBAAKf,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAWa,SAfA,SAACL,GACXF,EACF+B,MAAK,SAAAC,GAAc,OAAIA,EAAe5B,SAAWF,EAAME,UAGxDK,EAAS,6BAFTI,GAAS,SAAAoB,GAAU,4BAAQA,GAAR,CAAoB/B,QAYNO,SAAUA,EAAUD,MAAOA,OCnBlE0B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.ca549ef7.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  Title,\n  Poster,\n  imdbID,\n  Plot,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={Poster}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{Title}</p>\n        </div>\n      </div>\n      <div className=\"content\">\n        {Plot}\n        <br />\n        <a href={`https://www.imdb.com/title/${imdbID}`}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\nMovieCard.propTypes = {\n  Title: PropTypes.string.isRequired,\n  Poster: PropTypes.string.isRequired,\n  imdbID: PropTypes.string.isRequired,\n  Plot: PropTypes.string,\n};\nMovieCard.defaultProps = {\n  Plot: '',\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const apiKey = 'e8f0b8eb';\nconst url = `http://www.omdbapi.com/?apikey=${apiKey}&t=`;\n\nexport const getMovie = title => fetch(`${url}${title}`)\n  .then(result => result.json());\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport ClassNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/getMovies';\n\nexport const FindMovie = ({ addMovie, error, setError }) => {\n  const [value, setValue] = useState('');\n  const [movie, setMovie] = useState(null);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={ClassNames({\n                input: true,\n                'is-danger': error === 'Cant find a movie',\n              })}\n              value={value}\n              onChange={\n                ((event) => {\n                  setValue(event.target.value);\n                })\n              }\n            />\n          </div>\n\n          {error\n            && (\n              <p className=\"help is-danger\">\n                {error}\n              </p>\n            )\n          }\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                getMovie(value)\n                  .then((result) => {\n                    if (result.Error) {\n                      setError('Cant find a movie');\n\n                      return;\n                    }\n\n                    setError('');\n                    setMovie(result);\n                  });\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(movie);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {(movie\n        && (\n          <div className=\"container\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard {...movie} />\n          </div>\n        ))}\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  error: PropTypes.string.isRequired,\n  setError: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App = () => {\n  const [movies, setMovie] = useState([]);\n  const [error, setError] = useState('');\n\n  const addMovie = (movie) => {\n    if (!movies\n      .some(displayedMovie => displayedMovie.imdbId === movie.imdbId)) {\n      setMovie(prevMovies => [...prevMovies, movie]);\n    } else {\n      setError('Movie already in the list');\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} setError={setError} error={error} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}